<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net9.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>disable</Nullable>
		<ApplicationIcon>Assets\Windows\Icons\Default.ico</ApplicationIcon>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<PlatformTarget>x64</PlatformTarget>
		<Platforms>x64</Platforms>
		<RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>
		<PathMap>$(MSBuildProjectDirectory)=./</PathMap>
		<Configurations>Release</Configurations>
		<!-- technically supported but really ugly and stupid-->
		<NoWarn>IDE0290</NoWarn>
	</PropertyGroup>

	<Target Name="PublishAllParallel" AfterTargets="CoreBuild" Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
		<Message Text="--- Starting publish ---" Importance="high" />

		<MSBuild Projects="$(MSBuildProjectFile)" Targets="PublishForWindows;PublishForLinux" />

		<Message Text="--- Publish finished ---" Importance="high" />
	</Target>

	<Target Name="PublishForWindows">
		<Message Text="------ PUBLISHING WINDOWS ------" Importance="high" />
		<Exec Command="dotnet publish &quot;$(MSBuildProjectFullPath)&quot; -c $(Configuration) -r win-x64 --self-contained true -p:PublishSingleFile=true -o &quot;$(SolutionDir)publish\VoiceChatHost\win-x64\&quot;" />
		<Message Text="------ PUBLISHED WINDOWS ------" Importance="high" />
	</Target>

	<Target Name="PublishForLinux">
		<Message Text="------ PUBLISHING LINUX ------" Importance="high" />
		<Exec Command="dotnet publish &quot;$(MSBuildProjectFullPath)&quot; -c $(Configuration) -r linux-x64 --self-contained true -p:PublishSingleFile=true -o &quot;$(SolutionDir)publish\VoiceChatHost\linux-x64\&quot;" />
		<Message Text="------ PUBLISHED LINUX ------" Importance="high" />
	</Target>

	<PropertyGroup Condition=" ('$(OS)' == 'Windows_NT' AND '$(RuntimeIdentifier)' == '') OR ($(RuntimeIdentifier.StartsWith('win'))) ">
		<DefineConstants>$(DefineConstants);WINDOWS</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition=" ('$(OS)' == 'Linux' AND '$(RuntimeIdentifier)' == '') OR ($(RuntimeIdentifier.StartsWith('linux'))) ">
		<DefineConstants>$(DefineConstants);LINUX</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition=" ('$(OS)' == 'OSX' AND '$(RuntimeIdentifier)' == '') OR ($(RuntimeIdentifier.StartsWith('osx'))) ">
		<DefineConstants>$(DefineConstants);MACOS</DefineConstants>
	</PropertyGroup>

	<ItemGroup>
		<Content Include="Assets\**\*.*" Exclude="Assets\Windows\**\*.*;Assets\**\Source\**\*.*">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<ItemGroup Condition=" '$(RuntimeIdentifier)' != '' AND $(RuntimeIdentifier.StartsWith('win')) ">
		<Content Include="Assets\Windows\**\*.*" Exclude="Assets\Windows\**\Source\**\*.*">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Concentus" Version="2.2.2" />
		<PackageReference Include="NAudio" Version="2.2.1" />
		<PackageReference Include="YellowDogMan.RRNoise.NET" Version="0.1.6" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\VoiceChatShared\VoiceChatShared.csproj" />
	</ItemGroup>
</Project>
